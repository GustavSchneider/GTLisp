(pretty-print "hello world")
(define window-height 1024)
(define window-width 1024)
(define window-title "Oh look it is a pong")
(define player-width 100)
(if (init-graphics)
    (pretty-print "graphics initated")
    (begin (pretty-print "graphics init failed")
	   (quit)))


(if (init-window window-width window-height window-title)
    (pretty-print "started window")
    (begin
      (pretty-print "window creation failed")
      (quit)))

(define milli-second (pow 10 6))

(define player-dims (cons 0.1 0.5))
(define player1 '(-1.0 . 0.0))
(define player2 (cons (- 1.0 (car player-dims)) 0.0))
(define ball-start '(0. . 0.))
(define ball '(0.0 .  0.0))
(define ball-dims '(0.1 . 0.1))

(define ball-max-y 0.01)
(define ball-vect '(-0.005 . 0.0))

(define player-bottom-max (+ -1.0 (cdr player-dims)))

(define (handle-player)
  
  (if (key-is-down-W)
      (set-cdr! player1 (+ (cdr player1) 0.01))
      )
  (if (key-is-down-S)
      (set-cdr! player1 (- (cdr player1) 0.01))
      )
  
  (if (> (cdr player1) 1.0)
      (set-cdr! player1 1.0)
      (if (< (cdr player1) player-bottom-max)
	  (set-cdr! player1 player-bottom-max)
	  )
      )
  (if (key-UP)
       (set-cdr! player2 (+ (cdr player2) 0.01))
      )
  (if (key-DOWN)
       (set-cdr! player2 (- (cdr player2) 0.01))
      )

  (if (> (cdr player2) 1.0)
      (set-cdr! player2 1.0)
      (if (< (cdr player2) player-bottom-max)
	  (set-cdr! player2 player-bottom-max)
	  )
      )
  )

(define (ball-center-y)
  (- (cdr ball) (/ (cdr ball-dims) 2)))

(define (player-center-y player) (- (cdr player) (* (cdr player-dims) (* 0.5))))
(define hit-ratio 0.0)

(define (handle-ball-player-collition)
  (or (and (< (car ball) (+ (car player1) (car player-dims)))
	   (< (cdr ball) (cdr player1))
	   (> (cdr ball) (- (cdr player1) (cdr player-dims)))
	   (set-car! ball (+ (car player1) (car player-dims)))
	   (set! hit-ratio (/ (- (ball-center-y) (player-center-y player1)) (* (cdr ball-dims) 2)))
	   )
      (and (> (+ (car ball) (car ball-dims)) (car player2))
	   (< (cdr ball) (cdr player2))
	   (> (cdr ball) (- (cdr player2) (cdr player-dims)))
	   (set-car! ball (- (car player2) (car ball-dims)))
	   (set! hit-ratio (/ (- (ball-center-y) (player-center-y player2)) (* (cdr ball-dims) 2)))
	   )
      ))
  
(define (handle-ball)
  (cond
   ((handle-ball-player-collition)
    (set-cdr! ball-vect (* ball-max-y hit-ratio))
    (set-car! ball-vect (* (car ball-vect) -1.0))
    
    )
   ((or (< (car ball) -1.0) (> (+ (car ball) (car ball-dims)) 1.0))
    (set! ball ball-start))
   ((< (- (cdr ball) (cdr ball-dims)) -1.0)
    (set-cdr! ball (+ -1.0 (cdr ball-dims)))
    (set-cdr! ball-vect (* (cdr ball-vect) -1.0)))
   ((> (cdr ball) 1.0)
    (set-cdr! ball 1.0)
    (set-cdr! ball-vect (* (cdr ball-vect) -1.0))
    ))
  (set! ball (cons (+ (car ball) (car ball-vect)) (+ (cdr ball) (cdr ball-vect))))
  )

(define (game-loop)
  (clear-window 0.0 0. 0.)
  (poll-event)
  (sleep 0 (* milli-second 6))
  (draw-rect player1 player-dims)
  (draw-rect player2 player-dims)
  (draw-rect ball ball-dims)

  (handle-player)
  (handle-ball)
  (swap-buff)
  (game-loop))
(game-loop)
